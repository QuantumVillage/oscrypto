{
  "packs":{
    "analyze_certificate_data":{
      "discovery":[
        "select * from certificates LIMIT 1;"
      ],
      "queries":{
        "all_non_quantum_safe": {
          "query": "SELECT * FROM certificates WHERE key_algorithm IS NOT NULL AND (LOWER(key_algorithm) IN ('rsaencryption','rsa') OR LOWER(key_algorithm) LIKE '%ec%' OR LOWER(signing_algorithm) LIKE '%dsa%' OR LOWER(signing_algorithm) LIKE '%rsa%' OR LOWER(signing_algorithm) LIKE '%ed25519%' OR LOWER(signing_algorithm) LIKE '%ed448%' OR LOWER(signing_algorithm) LIKE '%ecdsa%');",
          "interval": 7200,
          "description": "All non-quantum-safe certificate key algorithms (RSA, DSA, ECDSA/EC, Ed25519/Ed448)."
        },
        "short_RSA_keys":{
          "query":"SELECT * FROM certificates WHERE key_algorithm = 'rsaEncryption' AND key_strength IS NOT NULL  AND key_strength GLOB '[0-9]*' AND CAST(key_strength AS INTEGER) < 2048;",
          "interval":7200,
          "description":"RSA Keys shorter than 2048"
        },
        "unsafe_RSA_keys":{
          "query":"SELECT * FROM certificates WHERE key_algorithm = 'rsaEncryption' AND key_strength IS NOT NULL  AND key_strength GLOB '[0-9]*' AND CAST(key_strength AS INTEGER) < 4096;",
          "interval":7200,
          "description":"RSA Keys shorter than 4096"
        },
        "sha1_signatures": {
          "query": "SELECT * FROM certificates WHERE signing_algorithm IS NOT NULL AND LOWER(signing_algorithm) LIKE '%sha1%';",
          "interval": 10800,
          "description": "SHA-1 signature algorithms (classically weak)."
        },
        "md5_signatures": {
          "query": "SELECT * FROM certificates WHERE signing_algorithm IS NOT NULL AND LOWER(signing_algorithm) LIKE '%md5%';",
          "interval": 10800,
          "description": "MD5 signature algorithms (classically weak)."
        },
        "certificate_valid_gt_2yrs":{
          "query": "SELECT path, subject, issuer, key_algorithm, key_strength, datetime(not_valid_before, 'unixepoch') AS not_before, datetime(not_valid_after,  'unixepoch') AS not_after, (not_valid_after - not_valid_before) / 86400 AS lifetime_days FROM certificates WHERE not_valid_before IS NOT NULL AND not_valid_after IS NOT NULL AND (not_valid_after - not_valid_before) > (86400 * 365 * 2);",
          "interval": 10800,
          "description": "Certificate is valid for >2 years"
        },
        "self_signed_certificates": {
          "query": "SELECT * FROM certificates WHERE self_signed = true;",
          "interval": 10800,
          "description": "Self-signed certificates."
        },
        "nginx_certificates": {
          "query": "SELECT * FROM certificates WHERE path IN (SELECT value FROM augeas WHERE label LIKE '%ssl_certificate%');",
          "interval": 10800,
          "description": "Certificates used by NGINX web server."
        },
        "apache_ssl_certificates": {
          "query": "SELECT * FROM certificates WHERE path IN (SELECT value FROM augeas WHERE path='/etc/apache2/sites-available/default-ssl.conf' AND label='arg' AND (LOWER(value) LIKE '%.crt' OR LOWER(value) LIKE '%.pem' OR LOWER(value) LIKE '%.key'));",
          "interval": 10800,
          "description": "Certificates used by Apache web server."
        }
      }
    }
  }
}